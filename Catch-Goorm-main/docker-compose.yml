services:
  web:
    build: .
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media  # 미디어 파일 경로 추가
      - ./db.sqlite3:/app/db.sqlite3  # SQLite 데이터베이스 파일
    expose:
      - "8000"
    ports:
    - "8000:8000"  # 외부 포트 8000을 컨테이너의 8000 포트에 연결
    command: >
      bash -c "python3 manage.py makemigrations && 
               python3 manage.py migrate && 
               gunicorn --workers 3 --bind 0.0.0.0:8000 User_service.wsgi:application"

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
      - media_volume:/app/media  # 미디어 파일 경로 추가
    depends_on:
      - web  # Nginx는 웹 서비스가 준비된 후 시작

volumes:
  static_volume:
  media_volume:  # 미디어 파일 저장소 추가


# version: '3.8'

# services:
#   web:
#     build: .
#     volumes:
#       - .:/app
#       - static_volume:/app/static
#     expose:
#       - "8000"
#     command: >
#       bash -c "./wait-for-it.sh db:3306 -- python3 manage.py makemigrations && python3 manage.py migrate &&gunicorn --bind 0.0.0.0:8000 User_service.wsgi:application "
#     depends_on:
#       - db
#   db:
#     image: mysql:8.0
#     restart: always
#     environment:
#       MYSQL_DATABASE: "${DB_DATABASE}"
#  #     MYSQL_USER: "${DB_USER}"
# #      MYSQL_PASSWORD: "${DB_PASSWORD}"
#       MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
#     volumes:
#       - db_data:/var/lib/mysql
# #      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#     ports:
#       - "3306:3306"



#   nginx:
#     image: nginx:latest
#     ports:
#       - "8080:80"
#     volumes:
#       - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#       - static_volume:/app/static
#     depends_on:
#       - web

# volumes:
#   db_data:
#   static_volume:
